@model Amba.ImagePowerTools.Settings.ImageMultiPickerFieldSettings
@{
    Script.Include("angular.js").AtHead();
    Script.Include("angular-ui.js").AtHead();
    Script.Include("CustomFieldsConfiguration.js").AtHead();
    Script.Require("jQueryUI_Sortable").AtHead();
    Style.Include("dashboard.css");
    var id = Guid.NewGuid().ToString("N").Substring(0, 6);
}
<fieldset>
    <div>
        <label for="@Html.FieldIdFor(m => m.PreviewWidth)">@T("Width for image preview")</label>
        @Html.TextBoxFor(m => m.PreviewWidth)
    </div>
</fieldset>

<fieldset id ="app_@(id)" data-ng-controller="CustomFieldsConfigurationCtrl">
    {{customFields | json}}
    <input type="hidden" name="@Html.NameFor(x => x.CustomFields)" value="{{customFields | json}}"/>
    <div>
        <div>
            <div>
                <label>Name:</label>
                <input type="text" name="fieldName" data-ng-model="fieldName" />
                <span data-ng-show='form.fieldName.$error.duplicate'>Field name duplicate</span>
                <span data-ng-show='form.fieldName.$error.required'>Required</span>
            </div>

            <div>
                <label>Display Name:</label>
                <input type="text" data-ng-model="fieldDisplayName"/>
            </div>
            <div >
                <label>Type:</label>
                <select data-ng-model="fieldType">
                    <option value="text" selected="selected">Text Line</option>
                    <option value="textarea">TextArea</option>
                </select>
            </div>
            <div>
                <a ng-click="addField(fieldName, fieldDisplayName, fieldType)">@T("Add")</a>
            </div>
        </div>
    </div>
    

    <div class="table" ng-model="customFields" ui:sortable>
        <div class="table-row" data-ng-repeat="field in customFields" >
            <div class="table-cell">
                Name: 
                <span>{{field.name}}</span>                  
            </div>
            <div class="table-cell" >
                Display Name:
                <input type="text" ng-model="field.displayName"/>
            </div>
            <div class="table-cell">
                Type:
                <select ng-model="field.type">
                    <option value="text" selected="selected">Text Line</option>
                    <option value="textarea">TextArea</option>
                </select>
            </div>
            <div>
                <a href="" ng-click="removeField(field.name)">@T("Delete")</a>
            </div>
        </div>
    </div>

</fieldset>
@using (Script.Foot())
{
    
    <script type="text/javascript">
        angular.module('app_@(id)', ['CustomFieldsConfiguration', 'ui'])
            .value('customFields', @Html.Raw(Model.CustomFields))
            .value('options', {
                id: '@(id)'
            });            
        angular.bootstrap($('#app_@(id)'), ['app_@(id)']);
    </script>
}

<fieldset>
    <label for="@Html.FieldIdFor(m => m.Hint)">@T("Help text")</label>
    @Html.TextAreaFor(m => m.Hint, new { @class = "textMedium", rows = "5" } )
    <span class="hint">@T("The help text is written under the field when authors are selecting content items.")</span>
    @Html.ValidationMessageFor(m => m.Hint)
</fieldset>